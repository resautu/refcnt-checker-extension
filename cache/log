python: can't open file '/Users/ziqi/Work/pyc/workaround/refcountChecker/LLMPlugin/RC_openai.py': [Errno 2] No such file or directory
[0;33m
====================
Content below is generated by LLVM Refcnt pass
====================
[0m[0;33m<init_pass> use settings from settings.json
[0m[0;33m<init_pass> initialization done
[0m[0;33m<runOnModule> analysis mode: inter
[0m[0;33m<runOnModule> entry function: PyInit_spam
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__2
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__3
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__3
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__3
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__3
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__2
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__1
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__2
[0m[0;33m<refcntAnalysis> memref: AAMemRef__No__2
[0m[0;33m<doAnalysis> intra analysis started
[0m[0;33m<doAnalysis> function: PyInit_spam
[0m[0;33m<intraAnalysis>---------AA sets begin---------
AAMemRef__No__3(size:6): 
, Spam_Error, _py_tmp, , , , 
AAMemRef__No__2(size:4): 
, retval, , , 
AAMemRef__No__1(size:12): 
call1, Spam_Error, module, call, , , , , , , , , 
AAMemRef__No__0(size:1): 
Spam_Error, 

<doAnalysis>---------AA sets end---------
[0m[0;33m<transferNode> call: PyModule_Create2
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> call: PyErr_NewException
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> call: _Py_XINCREF
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> call: PyModule_AddObject
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> call: _Py_XDECREF
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> outer memref should not be managed
[0m[0;33m<transferNode> call: _Py_DECREF
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> outer memref should not be managed
[0m[0;33m<transferNode> call: _Py_DECREF
[0m[0;33m<transferNode> memref: AAMemRef__No__3
[0m[0;33m<transferNode> outer memref should not be managed
[0m[0;33m<bugReport> bugs found:
[0m[0;33m<bugReport> Error:MLK;Memory:AAMemRef__No__3;Function:PyInit_spam;Line:0;Variable:call1;
[0m[0;33m<bugReport> Error:MLK;Memory:AAMemRef__No__3;Function:PyInit_spam;Line:0;Variable:Spam_Error;
[0m[0;33m<bugReport> Error:MLK;Memory:AAMemRef__No__3;Function:PyInit_spam;Line:0;Variable:_py_tmp;
[0m[0;33m<bugReport> Error:MLK;Memory:AAMemRef__No__3;Function:PyInit_spam;Line:0;Variable:call;
[0mFunction: PyInit_spam: 4 pointers, 7 call sites
  NoAlias:	ptr* %module, ptr* %retval
  NoAlias:	ptr* %module, ptr* @Spam_Error
  NoAlias:	ptr* %retval, ptr* @Spam_Error
  NoAlias:	ptr* %_py_tmp, ptr* %module
  NoAlias:	ptr* %_py_tmp, ptr* %retval
  NoAlias:	ptr* %_py_tmp, ptr* @Spam_Error
  NoModRef:  Ptr: ptr* %module	<->  %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  NoModRef:  Ptr: ptr* %retval	<->  %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  NoModRef:  Ptr: ptr* %module	<->  %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  NoModRef:  Ptr: ptr* %retval	<->  %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  NoModRef:  Ptr: ptr* %module	<->  call void @_Py_XINCREF(ptr noundef %1)
  NoModRef:  Ptr: ptr* %retval	<->  call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  call void @_Py_XINCREF(ptr noundef %1)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  call void @_Py_XINCREF(ptr noundef %1)
  NoModRef:  Ptr: ptr* %module	<->  %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  NoModRef:  Ptr: ptr* %retval	<->  %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  NoModRef:  Ptr: ptr* %module	<->  call void @_Py_XDECREF(ptr noundef %4)
  NoModRef:  Ptr: ptr* %retval	<->  call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  call void @_Py_XDECREF(ptr noundef %4)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  call void @_Py_XDECREF(ptr noundef %4)
  NoModRef:  Ptr: ptr* %module	<->  call void @_Py_DECREF(ptr noundef %7)
  NoModRef:  Ptr: ptr* %retval	<->  call void @_Py_DECREF(ptr noundef %7)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  call void @_Py_DECREF(ptr noundef %7)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  call void @_Py_DECREF(ptr noundef %7)
  NoModRef:  Ptr: ptr* %module	<->  call void @_Py_DECREF(ptr noundef %8)
  NoModRef:  Ptr: ptr* %retval	<->  call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  call void @_Py_DECREF(ptr noundef %8)
  NoModRef:  Ptr: ptr* %_py_tmp	<->  call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013) <->   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013) <->   call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013) <->   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013) <->   call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013) <->   call void @_Py_DECREF(ptr noundef %7)
  Both ModRef:   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013) <->   call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null) <->   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null) <->   call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null) <->   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null) <->   call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null) <->   call void @_Py_DECREF(ptr noundef %7)
  Both ModRef:   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null) <->   call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   call void @_Py_XINCREF(ptr noundef %1) <->   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:   call void @_Py_XINCREF(ptr noundef %1) <->   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:   call void @_Py_XINCREF(ptr noundef %1) <->   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:   call void @_Py_XINCREF(ptr noundef %1) <->   call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:   call void @_Py_XINCREF(ptr noundef %1) <->   call void @_Py_DECREF(ptr noundef %7)
  Both ModRef:   call void @_Py_XINCREF(ptr noundef %1) <->   call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3) <->   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3) <->   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3) <->   call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3) <->   call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3) <->   call void @_Py_DECREF(ptr noundef %7)
  Both ModRef:   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3) <->   call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   call void @_Py_XDECREF(ptr noundef %4) <->   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:   call void @_Py_XDECREF(ptr noundef %4) <->   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:   call void @_Py_XDECREF(ptr noundef %4) <->   call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:   call void @_Py_XDECREF(ptr noundef %4) <->   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:   call void @_Py_XDECREF(ptr noundef %4) <->   call void @_Py_DECREF(ptr noundef %7)
  Both ModRef:   call void @_Py_XDECREF(ptr noundef %4) <->   call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %7) <->   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %7) <->   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %7) <->   call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %7) <->   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %7) <->   call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %7) <->   call void @_Py_DECREF(ptr noundef %8)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %8) <->   %call = call ptr @PyModule_Create2(ptr noundef @spammodule, i32 noundef 1013)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %8) <->   %call1 = call ptr @PyErr_NewException(ptr noundef @.str, ptr noundef null, ptr noundef null)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %8) <->   call void @_Py_XINCREF(ptr noundef %1)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %8) <->   %call2 = call i32 @PyModule_AddObject(ptr noundef %2, ptr noundef @.str.1, ptr noundef %3)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %8) <->   call void @_Py_XDECREF(ptr noundef %4)
  Both ModRef:   call void @_Py_DECREF(ptr noundef %8) <->   call void @_Py_DECREF(ptr noundef %7)
Function: _Py_XINCREF: 1 pointers, 1 call sites
  NoModRef:  Ptr: ptr* %op.addr	<->  call void @_Py_INCREF(ptr noundef %1)
Function: _Py_XDECREF: 1 pointers, 1 call sites
  NoModRef:  Ptr: ptr* %op.addr	<->  call void @_Py_DECREF(ptr noundef %1)
Function: _Py_DECREF: 2 pointers, 1 call sites
  NoAlias:	i64* %ob_refcnt, ptr* %op.addr
  NoModRef:  Ptr: ptr* %op.addr	<->  call void @_Py_Dealloc(ptr noundef %2)
  Both ModRef:  Ptr: i64* %ob_refcnt	<->  call void @_Py_Dealloc(ptr noundef %2)
Function: spam_system: 6 pointers, 5 call sites
  NoAlias:	ptr* %args.addr, ptr* %self.addr
  NoAlias:	ptr* %retval, ptr* %self.addr
  NoAlias:	ptr* %args.addr, ptr* %retval
  NoAlias:	ptr* %command, ptr* %self.addr
  NoAlias:	ptr* %args.addr, ptr* %command
  NoAlias:	ptr* %command, ptr* %retval
  NoAlias:	ptr* %self.addr, i32* %sts
  NoAlias:	ptr* %args.addr, i32* %sts
  NoAlias:	ptr* %retval, i32* %sts
  NoAlias:	ptr* %command, i32* %sts
  NoAlias:	ptr* %self.addr, ptr* @Spam_Error
  NoAlias:	ptr* %args.addr, ptr* @Spam_Error
  NoAlias:	ptr* %retval, ptr* @Spam_Error
  NoAlias:	ptr* %command, ptr* @Spam_Error
  NoAlias:	i32* %sts, ptr* @Spam_Error
  NoModRef:  Ptr: ptr* %self.addr	<->  %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  NoModRef:  Ptr: ptr* %args.addr	<->  %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  NoModRef:  Ptr: ptr* %retval	<->  %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  Both ModRef:  Ptr: ptr* %command	<->  %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  NoModRef:  Ptr: i32* %sts	<->  %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  NoModRef:  Ptr: ptr* %self.addr	<->  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  NoModRef:  Ptr: ptr* %args.addr	<->  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  NoModRef:  Ptr: ptr* %retval	<->  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  Both ModRef:  Ptr: ptr* %command	<->  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  NoModRef:  Ptr: i32* %sts	<->  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  NoModRef:  Ptr: ptr* %self.addr	<->  %call2 = call i32 @system(ptr noundef %2)
  NoModRef:  Ptr: ptr* %args.addr	<->  %call2 = call i32 @system(ptr noundef %2)
  NoModRef:  Ptr: ptr* %retval	<->  %call2 = call i32 @system(ptr noundef %2)
  Both ModRef:  Ptr: ptr* %command	<->  %call2 = call i32 @system(ptr noundef %2)
  NoModRef:  Ptr: i32* %sts	<->  %call2 = call i32 @system(ptr noundef %2)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call2 = call i32 @system(ptr noundef %2)
  NoModRef:  Ptr: ptr* %self.addr	<->  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  NoModRef:  Ptr: ptr* %args.addr	<->  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  NoModRef:  Ptr: ptr* %retval	<->  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  Both ModRef:  Ptr: ptr* %command	<->  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  NoModRef:  Ptr: i32* %sts	<->  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  NoModRef:  Ptr: ptr* %self.addr	<->  %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  NoModRef:  Ptr: ptr* %args.addr	<->  %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  NoModRef:  Ptr: ptr* %retval	<->  %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:  Ptr: ptr* %command	<->  %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  NoModRef:  Ptr: i32* %sts	<->  %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:  Ptr: ptr* @Spam_Error	<->  %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command) <->   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  Both ModRef:   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command) <->   %call2 = call i32 @system(ptr noundef %2)
  Both ModRef:   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command) <->   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  Both ModRef:   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command) <->   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1) <->   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  Both ModRef:   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1) <->   %call2 = call i32 @system(ptr noundef %2)
  Both ModRef:   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1) <->   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  Both ModRef:   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1) <->   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:   %call2 = call i32 @system(ptr noundef %2) <->   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  Both ModRef:   %call2 = call i32 @system(ptr noundef %2) <->   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  Both ModRef:   %call2 = call i32 @system(ptr noundef %2) <->   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
  Both ModRef:   %call2 = call i32 @system(ptr noundef %2) <->   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8) <->   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  Both ModRef:   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8) <->   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  Both ModRef:   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8) <->   %call2 = call i32 @system(ptr noundef %2)
  Both ModRef:   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8) <->   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv)
  Both ModRef:   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv) <->   %call = call i32 (ptr, ptr, ...) @_PyArg_ParseTuple_SizeT(ptr noundef %0, ptr noundef @.str.6, ptr noundef %command)
  Both ModRef:   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv) <->   %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, ptr noundef %1)
  Both ModRef:   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv) <->   %call2 = call i32 @system(ptr noundef %2)
  Both ModRef:   %call5 = call ptr @PyLong_FromLong(i64 noundef %conv) <->   call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.8)
Function: _Py_INCREF: 2 pointers, 0 call sites
  NoAlias:	i64* %ob_refcnt, ptr* %op.addr
===== Alias Analysis Evaluator Report =====
  23 Total Alias Queries Performed
  23 no alias responses (100.0%)
  0 may alias responses (0.0%)
  0 partial alias responses (0.0%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 100%/0%/0%/0%
  124 Total ModRef Queries Performed
  44 no mod/ref responses (35.4%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  80 mod & ref responses (64.5%)
  Alias Analysis Evaluator Mod/Ref Summary: 35%/0%/0%/64%
